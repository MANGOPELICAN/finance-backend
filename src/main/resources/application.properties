spring.datasource.url=jdbc:mysql://localhost:3306/finance_app

# "root" value by default
spring.datasource.username=${DB_USER:root}

# ← Uses an Environment Variable named DB_PASS,
# this is done to protect the password.
spring.datasource.password=${DB_PASS}

# override the default “user” + generated password
spring.security.user.name=admin
spring.security.user.password=secret123
spring.security.user.roles=USER



# Set as "none" during development
spring.jpa.hibernate.ddl-auto=none

# Approach 2
# let Flyway create its history table even if the schema already has objects
#spring.flyway.baseline-on-migrate=true
# optional, defaults to 1
#spring.flyway.baseline-version=1


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

management.endpoints.web.exposure.include=*

# Enable Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration


# load variables from .env
spring.config.import=optional:dotenv:



# ────────────────────────────────────────────────────────────────────────
# Tell Flyway to “baseline” any pre-existing schema
#
# If you ever point at a database that already has tables but no
# flyway_schema_history table, Flyway will assume those tables are
# at version 1, record that in the history table, and then apply
# any later migrations—avoiding the “non-empty schema but no history”
# error.
spring.flyway.baseline-on-migrate=true
# ────────────────────────────────────────────────────────────────────────
