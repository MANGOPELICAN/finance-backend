spring.config.import=optional:dotenv:

# Datasource url
spring.datasource.url=${SPRING_DATASOURCE_URL}

# Datasource Username, can use "root" by default
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}

# ← Uses an Environment Variable named SPRING_DATASOURCE_PASSWORD,
# this is done to protect the password.
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# override the default “user” + generated password
spring.security.user.name=admin
spring.security.user.password=secret123
spring.security.user.roles=USER


# disable DevTools hidden restarts so your static creds stick
spring.devtools.restart.enabled=false


# PostgreSQL JDBC Driver
spring.datasource.driver-class-name=org.postgresql.Driver



# This is used in order for "Generated password:" to appear in the log. Remove during production
logging.level.org.springframework.security=DEBUG


# expose the 'env' actuator endpointv
management.endpoint.env.access=UNRESTRICTED


# JPA Stuff


# Set as "none" during development
spring.jpa.hibernate.ddl-auto=none

management.endpoints.web.exposure.include=*

# Approach 2
# let Flyway create its history table even if the schema already has objects
#spring.flyway.baseline-on-migrate=true
# optional, defaults to 1
#spring.flyway.baseline-version=1


# Enable Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration



# ────────────────────────────────────────────────────────────────────────
# Tell Flyway to “baseline” any pre-existing schema
#
# If you ever point at a database that already has tables but no
# flyway_schema_history table, Flyway will assume those tables are
# at version 1, record that in the history table, and then apply
# any later migrations—avoiding the “non-empty schema but no history”
# error.
spring.flyway.baseline-on-migrate=true
# ────────────────────────────────────────────────────────────────────────
